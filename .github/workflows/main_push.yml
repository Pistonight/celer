

# Environment
env:
  CARGO_TERM_COLOR: always
name: Push

on:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  check:
    name: Health Check
    #
    runs-on: ubuntu-latest
    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup | Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3.10
      uses: actions/setup-python@v3.0.0
      with:
        python-version: '3.10'
    - name: Setup | toml, pyyaml, pylint, pylint-quotes
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          toml
          pyyaml
          pylint
          pylint-quotes
    - name: Just check
      run: just -f .justci ci-check

  rs-lint:
    name: Lint RS
    #
    runs-on: ubuntu-latest
    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup | Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3.10
      uses: actions/setup-python@v3.0.0
      with:
        python-version: '3.10'
    - name: Setup | toml, pyyaml, pylint, pylint-quotes
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          toml
          pyyaml
          pylint
          pylint-quotes
    - name: Just rs-lint
      run: just -f .justci ci-rs-lint

  ts-lint:
    name: Lint TS
    #
    runs-on: ubuntu-latest
    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup | Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3.10
      uses: actions/setup-python@v3.0.0
      with:
        python-version: '3.10'
    - name: Setup | toml, pyyaml, pylint, pylint-quotes
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          toml
          pyyaml
          pylint
          pylint-quotes
    - name: Setup | Node 16.14.2
      uses: actions/setup-node@v3.0.0
      with:
        node-version: '16.14.2'
    - name: Setup | Node Install
      run: just -f .justci ci-node
    - name: Just ts-lint
      run: just -f .justci ci-ts-lint

  run-unit-test:
    name: Unit Test
    #
    runs-on: ubuntu-latest
    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup | Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3.10
      uses: actions/setup-python@v3.0.0
      with:
        python-version: '3.10'
    - name: Setup | toml, pyyaml, pylint, pylint-quotes
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          toml
          pyyaml
          pylint
          pylint-quotes
    - name: Setup | Node 16.14.2
      uses: actions/setup-node@v3.0.0
      with:
        node-version: '16.14.2'
    - name: Setup | Node Install
      run: just -f .justci ci-node
    - name: Just unit-test
      run: just -f .justci ci-unit-test

  e2e-test:
    name: Devtool E2E Test
    strategy: { matrix: { os: [ ubuntu-latest, macos-latest ] } }
    runs-on: ${{ matrix.os }}
    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup | Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3.10
      uses: actions/setup-python@v3.0.0
      with:
        python-version: '3.10'
    - name: Setup | toml, pyyaml, pylint, pylint-quotes
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          toml
          pyyaml
          pylint
          pylint-quotes
    - name: Just e2e-test
      run: just -f .justci ci-e2e-test

  e2e-test-windows:
    name: Devtool E2E Test for Windows
    #
    runs-on: windows-latest
    steps:
    - name: Setup | Windows Line End (CRLF)
      run: |
        git config --global core.autocrlf false
        git config --global core.eol crlf
    - name: Setup | Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup | Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3.10
      uses: actions/setup-python@v3.0.0
      with:
        python-version: '3.10'
    - name: Setup | toml, pyyaml, pylint, pylint-quotes
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          toml
          pyyaml
          pylint
          pylint-quotes
    - name: Just e2e-test-windows
      run: just -f .justci ci-e2e-test-windows

  cargo-build-ubuntu:
    name: Build Devtool (Ubuntu)
    #
    runs-on: ubuntu-latest
    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup | Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3.10
      uses: actions/setup-python@v3.0.0
      with:
        python-version: '3.10'
    - name: Setup | toml, pyyaml, pylint, pylint-quotes
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          toml
          pyyaml
          pylint
          pylint-quotes
    - name: Just cargo-release
      run: just -f .justci ci-cargo-release
    - name: Just cargo-tar-ubuntu
      run: just -f .justci ci-cargo-tar-ubuntu
    - uses: actions/upload-artifact@v3
      with:
        name: cdt-ubuntu
        path: release-ci/celer-devtool-x86_64-linux.tar.gz

  cargo-build-macos:
    name: Build Devtool (Mac OS)
    #
    runs-on: macos-latest
    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup | Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3.10
      uses: actions/setup-python@v3.0.0
      with:
        python-version: '3.10'
    - name: Setup | toml, pyyaml, pylint, pylint-quotes
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          toml
          pyyaml
          pylint
          pylint-quotes
    - name: Just cargo-release
      run: just -f .justci ci-cargo-release
    - name: Just cargo-tar-macos
      run: just -f .justci ci-cargo-tar-macos
    - uses: actions/upload-artifact@v3
      with:
        name: cdt-macos
        path: release-ci/celer-devtool-x86_64-darwin.tar.gz

  cargo-build-windows:
    name: Build Devtool (Windows)
    #
    runs-on: windows-latest
    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup | Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3.10
      uses: actions/setup-python@v3.0.0
      with:
        python-version: '3.10'
    - name: Setup | toml, pyyaml, pylint, pylint-quotes
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          toml
          pyyaml
          pylint
          pylint-quotes
    - name: Just cargo-release
      run: just -f .justci ci-cargo-release
    - name: Just cargo-tar-windows
      run: just -f .justci ci-cargo-tar-windows
    - uses: actions/upload-artifact@v3
      with:
        name: cdt-windows
        path: release-ci/celer-devtool-x86_64-windows.tar.gz

  web-build:
    name: Build Web
    #
    runs-on: ubuntu-latest
    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup | Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3.10
      uses: actions/setup-python@v3.0.0
      with:
        python-version: '3.10'
    - name: Setup | toml, pyyaml, pylint, pylint-quotes
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          toml
          pyyaml
          pylint
          pylint-quotes
    - name: Setup | Node 16.14.2
      uses: actions/setup-node@v3.0.0
      with:
        node-version: '16.14.2'
    - name: Setup | Node Install
      run: just -f .justci ci-node
    - name: Setup | wasm-pack
      uses: jetli/wasm-pack-action@v0.3.0
      with:
        version: 'latest'
    - name: Skip web-test (because WIP)
      run: echo "web-test Skipped"
    - name: Just web-build
      run: just -f .justci ci-web-build
    - name: Just web-tar
      run: just -f .justci ci-web-tar
    - uses: actions/upload-artifact@v3
      with:
        name: cwa
        path: release-ci/celer-web-app.tar.gz

  vsce-build:
    name: Build VSCE
    #
    runs-on: ubuntu-latest
    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup | Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3.10
      uses: actions/setup-python@v3.0.0
      with:
        python-version: '3.10'
    - name: Setup | toml, pyyaml, pylint, pylint-quotes
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          toml
          pyyaml
          pylint
          pylint-quotes
    - name: Setup | Node 16.14.2
      uses: actions/setup-node@v3.0.0
      with:
        node-version: '16.14.2'
    - name: Setup | Node Install
      run: just -f .justci ci-node
    - name: Just vsce-build
      run: just -f .justci ci-vsce-build
    - name: Just vsix
      run: just -f .justci ci-vsix
    - uses: actions/upload-artifact@v3
      with:
        name: vsix
        path: release-ci/celer.vsix

  wiki-build:
    name: Build Wiki
    #
    runs-on: ubuntu-latest
    steps:
    - name: Setup | Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup | Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: stable
    - name: Setup | just
      uses: extractions/setup-just@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup | Python 3.10
      uses: actions/setup-python@v3.0.0
      with:
        python-version: '3.10'
    - name: Setup | toml, pyyaml, pylint, pylint-quotes
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          toml
          pyyaml
          pylint
          pylint-quotes
    - name: Just wiki-release
      run: just -f .justci ci-wiki-release
